Problem 2:
GameEngine is owned by the GameViewController. Every 1/60 second, GameViewController will call GameEngine to simulate physical phenomenon for the GameObjects.
The Controller and Model for GameObject are merged into the same class. All the physical properties of a GameObject can be found in GameObject class.
GameObject implements protocol defined by the GameEngine so that GameEngine can read the physical data from the GameObject. This is not done in the implementation, since the protocol is highly dependent on the GameEngine, and the GameEngine is likely to be replaced in PS5.


Problem 3:

To test effectively, ideally, for each (or a group of several) test case(s), there is a configuration of objects in the box for those specific test cases to isolate each of the effects. However, the implementation doesn't provide any mechanism of choosing configuration, so testing may require modification on the code to set up the appropriate environment.

Black-box testing (but with the knowledge of accelerometer being used to simulate gravity)
- Test gravity:
  + Hold the device in some orientation - the objects should fall to the bottom of the screen (relative to the orientation).
    . The object should react quickly to the change in gravity if it is stationary.
    . If the object is moving in the opposite direction relative to gravity, the object should gradually change direction and move in the direction of gravity.
    . The objects should speed up towards the bottom of the screen.
  + Group the objects together at one end of the screen and rotate the device by 180 degree. The object should not stick at the top of the screen. The objects should also come to rest or only move slightly on the bottom of the screen under the effect of gravity.

- Test collision between 2 objects:
  + Scaled up objects should collide as a non-scaled up object with the same apparent size.
  + Wall and object - the wall should not move at all, no matter how heavy the objects are (finite mass), and the object should bounce off the wall.
    . Slow collision - tilt the device slightly to let the object collide with the wall.
    . Fast collision - aggregate the device on one of the shorter edge of the device and rotate 180 degree. The object should not obviously overlap with the wall or escape from the wall.
    . Resting - object should be able to rest on the wall (somewhere in the middle), not only at the corners.
    . Sliding - object should be able to slide on the wall when the device is tilted.
  + Object and object
    . The object should collide with each other without visible protruding, except for the case of thin object where deep protruding may be observed.

- Test collision between multiple objects:
  + Tilt the device around and try to aggregate objects in the corner - the objects should eventually be able to aggregate in the corner and stay there without bouncing around or go through each other under gravity.
  + Fast collision and pile up: the fastest way to achieve this is by rotating the device to landscape position and tilt it towards left side, then rotate 90 degree for a free fall. The objects will move very fast and collide with the wall then pile up on each other. The amount of visible overlapping among the objects, and between the objects and the wall should not be too obviously visible. The objects should not escape the wall and disappear under the large amount of force either.

Glass-box testing
- Test collision between multiple objects:
  + Choose/set objects and walls with 0 friction and 0 restitution. The object should drop to the bottom of the screen with little bouncing around before coming to a rest. (This can also be used to test whether friction and elasticity work).

- Test moment of inertia works:
  + Choose/set 2 objects with the same configuration, but with reasonable difference in mass. The object with more mass will rotate less than the object with less mass.

- Test friction works:
  + Choose an object with 0 coefficient and another object with 1 coefficient, arrange them on one wall of the screen, then tilt the device a little. The object with 1 coefficient will slide faster than the object with 0 coefficient.

- Test elasticity works:
  + Choose/set an object with 0 restitution and another object with 1 restitution, with same angle, same distance from bottom of the screen and without any obstacle on the way; let them free fall. The object with 1 restitution will bounce around more before coming to a stop, while the object with 0 restitution will come to a rest faster.